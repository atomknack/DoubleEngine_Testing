using CollectionLike.Pooled;
using DoubleEngine;
using FluentAssertions_Extensions;
using NUnit.Framework;
using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using VectorCore;

namespace AtomTests.Meshes
{


public class MeshUtil_Tests
{
    private static TestCaseData[] abcde = new TestCaseData[] {
        new TestCaseData(
        new int[]{ 0, 1, 2, 3, 0, 2, 0, 4, 1, 5, 4, 0, 5, 0, 3, 6, 5, 3, 7, 4, 5, 7, 5, 6, 8, 7, 6, 9, 7, 8, 10, 9, 8, 9, 4, 7, 11, 4, 9, 11, 9, 10, 12, 11, 10, 13, 4, 11, 13, 11, 12, 14, 13, 12, 15, 16, 13, 14, 15, 13, 16, 4, 13, 2, 1, 16, 15, 2, 16, 1, 4, 16, 6, 3, 2, 8, 6, 2, 10, 8, 2, 12, 10, 2, 14, 12, 2, 15, 14, 2 },
        new Vec3D[] { new Vec3D(-0.19, -0.35, -0.19), new Vec3D(0.00, -0.35, -0.27), new Vec3D(0.00, -0.50, -0.49), new Vec3D(-0.34, -0.50, -0.34), new Vec3D(0.00, -0.30, 0.00), new Vec3D(-0.27, -0.35, 0.00), new Vec3D(-0.49, -0.50, 0.00), new Vec3D(-0.19, -0.35, 0.19), new Vec3D(-0.34, -0.50, 0.34), new Vec3D(0.00, -0.35, 0.27), new Vec3D(0.00, -0.50, 0.49), new Vec3D(0.19, -0.35, 0.19), new Vec3D(0.34, -0.50, 0.34), new Vec3D(0.27, -0.35, 0.00), new Vec3D(0.49, -0.50, 0.00), new Vec3D(0.34, -0.50, -0.34), new Vec3D(0.19, -0.35, -0.19) },
        new int[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 },
        new int[] { 0, 1, 2, 3, 0, 2, 0, 4, 1, 5, 4, 0, 5, 0, 3, 6, 5, 3, 7, 4, 5, 7, 5, 6, 8, 7, 6, 9, 7, 8, 10, 9, 8, 9, 4, 7, 11, 4, 9, 11, 9, 10, 12, 11, 10, 13, 4, 11, 13, 11, 12, 14, 13, 12, 15, 16, 13, 14, 15, 13, 16, 4, 13, 2, 1, 16, 15, 2, 16, 1, 4, 16 },
        new Vec3D[] { new Vec3D(-0.19, -0.35, -0.19), new Vec3D(0.00, -0.35, -0.27), new Vec3D(0.00, -0.50, -0.49), new Vec3D(-0.34, -0.50, -0.34), new Vec3D(0.00, -0.30, 0.00), new Vec3D(-0.27, -0.35, 0.00), new Vec3D(-0.49, -0.50, 0.00), new Vec3D(-0.19, -0.35, 0.19), new Vec3D(-0.34, -0.50, 0.34), new Vec3D(0.00, -0.35, 0.27), new Vec3D(0.00, -0.50, 0.49), new Vec3D(0.19, -0.35, 0.19), new Vec3D(0.34, -0.50, 0.34), new Vec3D(0.27, -0.35, 0.00), new Vec3D(0.49, -0.50, 0.00), new Vec3D(0.34, -0.50, -0.34), new Vec3D(0.19, -0.35, -0.19) }
        ),
        new TestCaseData(
            new int[]{ 0,1,2,3,0,2,4,5,6,7,4,6,8,9,6,5,8,6,1,9,8,2,1,8,0,3,4,7,0,4,2,8,5,3,2,5,4,3,5,1,0,7,9,1,7,6,9,7 }, 
            new Vec3D[]{ new Vec3D(0.50, 0.00, 0.50),new Vec3D(0.50, 0.50, 0.00),new Vec3D(-0.50, 0.50, 0.00),new Vec3D(-0.50, 0.00, 0.50),new Vec3D(-0.50, -0.50, 0.50),new Vec3D(-0.50, -0.50, -0.50),new Vec3D(0.50, -0.50, -0.50),new Vec3D(0.50, -0.50, 0.50),new Vec3D(-0.50, 0.50, -0.50),new Vec3D(0.50, 0.50, -0.50) }, 
            new int[]{ 0,1 }, 
            new int[]{ 0,1,2,3,0,2 }, 
            new Vec3D[]{ new Vec3D(0.50, 0.00, 0.50),new Vec3D(0.50, 0.50, 0.00),new Vec3D(-0.50, 0.50, 0.00),new Vec3D(-0.50, 0.00, 0.50) } 
            ),
         new TestCaseData( new int[]{ 0,1,2,3,0,2,4,5,6,7,4,6,4,8,0,3,4,0,9,10,1,8,9,1,0,8,1,5,4,3,2,5,3,7,6,10,9,7,10,4,7,9,8,4,9,6,5,2,10,6,2,1,10,2 }, new Vec3D[]{ new Vec3D(-0.50, -0.50, 0.50),new Vec3D(-0.50, -0.50, -0.50),new Vec3D(0.50, -0.50, -0.50),new Vec3D(0.50, -0.50, 0.50),new Vec3D(0.50, 0.00, 0.50),new Vec3D(0.50, 0.00, -0.50),new Vec3D(0.00, 0.50, -0.50),new Vec3D(0.00, 0.50, 0.00),new Vec3D(-0.50, 0.00, 0.50),new Vec3D(-0.50, 0.50, 0.00),new Vec3D(-0.50, 0.50, -0.50) }, new int[]{ 2,3,13,14 }, new int[]{ 0,1,2,3,0,2,0,3,4,5,0,4 }, new Vec3D[]{ new Vec3D(0.50, 0.00, 0.50),new Vec3D(0.50, 0.00, -0.50),new Vec3D(0.00, 0.50, -0.50),new Vec3D(0.00, 0.50, 0.00),new Vec3D(-0.50, 0.50, 0.00),new Vec3D(-0.50, 0.00, 0.50) } ),
         new TestCaseData( new int[]{ 0,1,2,3,0,2,3,4,5,0,3,5,2,1,5,4,2,5,3,2,4,5,1,0 }, new Vec3D[]{ new Vec3D(0.50, -0.50, 0.50),new Vec3D(0.50, 0.50, -0.50),new Vec3D(-0.50, 0.50, -0.50),new Vec3D(-0.50, -0.50, 0.50),new Vec3D(-0.50, -0.50, -0.50),new Vec3D(0.50, -0.50, -0.50) }, new int[]{ 0,1 }, new int[]{ 0,1,2,3,0,2 }, new Vec3D[]{ new Vec3D(0.50, -0.50, 0.50),new Vec3D(0.50, 0.50, -0.50),new Vec3D(-0.50, 0.50, -0.50),new Vec3D(-0.50, -0.50, 0.50) } ),
         new TestCaseData( new int[]{ 0,1,2,3,4,1,0,3,1,4,2,1,3,2,4,0,2,3 }, new Vec3D[]{ new Vec3D(0.50, -0.50, 0.50),new Vec3D(0.50, -0.50, -0.50),new Vec3D(-0.50, 0.50, -0.50),new Vec3D(-0.50, -0.50, 0.50),new Vec3D(-0.50, -0.50, -0.50) }, new int[]{ 0,5 }, new int[]{ 0,1,2,0,2,3 }, new Vec3D[]{ new Vec3D(0.50, -0.50, 0.50),new Vec3D(0.50, -0.50, -0.50),new Vec3D(-0.50, 0.50, -0.50),new Vec3D(-0.50, -0.50, 0.50) } ),
         new TestCaseData( new int[]{ 0,1,2,3,0,2,4,3,2,5,6,7,2,5,7,4,2,7,8,0,3,6,8,3,7,6,3,5,9,8,6,5,8,2,1,9,5,2,9,1,0,8,9,1,8,4,7,3 }, new Vec3D[]{ new Vec3D(0.50, 0.50, -0.50),new Vec3D(-0.50, 0.50, -0.50),new Vec3D(-0.50, 0.50, 0.50),new Vec3D(0.50, 0.50, 0.00),new Vec3D(0.00, 0.50, 0.50),new Vec3D(-0.50, -0.50, 0.50),new Vec3D(0.50, -0.50, 0.50),new Vec3D(0.50, 0.00, 0.50),new Vec3D(0.50, -0.50, -0.50),new Vec3D(-0.50, -0.50, -0.50) }, new int[]{ 15 }, new int[]{ 0,1,2 }, new Vec3D[]{ new Vec3D(0.00, 0.50, 0.50),new Vec3D(0.50, 0.00, 0.50),new Vec3D(0.50, 0.50, 0.00) } ),
         new TestCaseData( new int[]{ 0,1,2,2,3,4,4,5,0,3,6,5,4,3,5,2,1,6,3,2,6,1,0,5,6,1,5,2,4,0 }, new Vec3D[]{ new Vec3D(0.50, 0.50, -0.50),new Vec3D(-0.50, 0.50, -0.50),new Vec3D(-0.50, 0.50, 0.50),new Vec3D(-0.50, -0.50, 0.50),new Vec3D(0.50, -0.50, 0.50),new Vec3D(0.50, -0.50, -0.50),new Vec3D(-0.50, -0.50, -0.50) }, new int[]{ 9 }, new int[]{ 0,1,2 }, new Vec3D[]{ new Vec3D(-0.50, 0.50, 0.50),new Vec3D(0.50, -0.50, 0.50),new Vec3D(0.50, 0.50, -0.50) } ),
         new TestCaseData( new int[]{ 0,1,2,2,3,4,4,5,0,3,1,5,3,2,1,1,0,5,2,4,0,3,5,4 }, new Vec3D[]{ new Vec3D(0.50, 0.50, -0.50),new Vec3D(-0.50, 0.50, -0.50),new Vec3D(-0.50, 0.50, 0.50),new Vec3D(-0.50, -0.50, 0.50),new Vec3D(0.50, -0.50, 0.50),new Vec3D(0.50, -0.50, -0.50) }, new int[]{ 3,6 }, new int[]{ 0,1,2,3,4,5 }, new Vec3D[]{ new Vec3D(-0.50, -0.50, 0.50),new Vec3D(-0.50, 0.50, -0.50),new Vec3D(0.50, -0.50, -0.50),new Vec3D(-0.50, 0.50, 0.50),new Vec3D(0.50, -0.50, 0.50),new Vec3D(0.50, 0.50, -0.50) } ),
         new TestCaseData( new int[]{ 0,1,2,3,0,2,4,3,2,5,4,2,6,5,2,7,6,2,8,9,10,11,8,10,12,11,10,13,14,15,16,13,15,17,16,15,18,2,1,16,18,1,13,16,1,19,20,7,18,19,7,2,18,7,6,7,20,21,6,20,22,21,20,23,21,22,24,23,22,25,24,22,23,26,5,21,23,5,6,21,5,4,5,26,27,4,26,28,27,26,3,4,27,8,3,27,9,8,27,9,27,28,10,9,28,29,10,28,15,14,30,12,15,30,11,12,30,30,0,3,11,30,3,8,11,3,1,0,30,13,1,30,14,13,30,22,20,19,25,22,19,31,25,19,28,26,23,29,28,23,24,29,23,32,33,34,35,32,34,36,35,34,37,36,34,38,37,34,39,38,34,40,12,10,41,40,10,42,41,10,43,17,15,44,43,15,45,44,15,43,46,47,17,43,47,31,17,47,43,44,39,46,43,39,34,46,39,46,34,33,47,46,33,48,47,33,49,50,48,32,49,48,33,32,48,25,50,49,24,25,49,51,24,49,49,32,35,51,49,35,52,51,35,53,54,52,36,53,52,35,36,52,41,42,53,37,41,53,36,37,53,29,54,53,10,29,53,42,10,53,40,55,45,12,40,45,15,12,45,40,41,37,55,40,37,38,55,37,44,45,55,39,44,55,38,39,55,25,31,47,50,25,47,48,50,47,29,24,51,54,29,51,52,54,51,16,17,31,18,16,31,19,18,31 }, new Vec3D[]{ new Vec3D(0.34, 0.50, -0.34),new Vec3D(0.00, 0.50, -0.49),new Vec3D(-0.34, 0.50, -0.34),new Vec3D(0.49, 0.50, 0.00),new Vec3D(0.34, 0.50, 0.34),new Vec3D(0.00, 0.50, 0.49),new Vec3D(-0.34, 0.50, 0.34),new Vec3D(-0.49, 0.50, 0.00),new Vec3D(0.50, 0.49, 0.00),new Vec3D(0.50, 0.34, 0.34),new Vec3D(0.50, 0.00, 0.49),new Vec3D(0.50, 0.34, -0.34),new Vec3D(0.50, 0.00, -0.49),new Vec3D(0.00, 0.49, -0.50),new Vec3D(0.34, 0.34, -0.50),new Vec3D(0.49, 0.00, -0.50),new Vec3D(-0.34, 0.34, -0.50),new Vec3D(-0.49, 0.00, -0.50),new Vec3D(-0.41, 0.41, -0.41),new Vec3D(-0.50, 0.34, -0.34),new Vec3D(-0.50, 0.49, 0.00),new Vec3D(-0.41, 0.41, 0.41),new Vec3D(-0.50, 0.34, 0.34),new Vec3D(-0.34, 0.34, 0.50),new Vec3D(-0.49, 0.00, 0.50),new Vec3D(-0.50, 0.00, 0.49),new Vec3D(0.00, 0.49, 0.50),new Vec3D(0.41, 0.41, 0.41),new Vec3D(0.34, 0.34, 0.50),new Vec3D(0.49, 0.00, 0.50),new Vec3D(0.41, 0.41, -0.41),new Vec3D(-0.50, 0.00, -0.49),new Vec3D(-0.34, -0.50, 0.34),new Vec3D(-0.49, -0.50, 0.00),new Vec3D(-0.34, -0.50, -0.34),new Vec3D(0.00, -0.50, 0.49),new Vec3D(0.34, -0.50, 0.34),new Vec3D(0.49, -0.50, 0.00),new Vec3D(0.34, -0.50, -0.34),new Vec3D(0.00, -0.50, -0.49),new Vec3D(0.50, -0.34, -0.34),new Vec3D(0.50, -0.49, 0.00),new Vec3D(0.50, -0.34, 0.34),new Vec3D(-0.34, -0.34, -0.50),new Vec3D(0.00, -0.49, -0.50),new Vec3D(0.34, -0.34, -0.50),new Vec3D(-0.41, -0.41, -0.41),new Vec3D(-0.50, -0.34, -0.34),new Vec3D(-0.50, -0.49, 0.00),new Vec3D(-0.41, -0.41, 0.41),new Vec3D(-0.50, -0.34, 0.34),new Vec3D(-0.34, -0.34, 0.50),new Vec3D(0.00, -0.49, 0.50),new Vec3D(0.41, -0.41, 0.41),new Vec3D(0.34, -0.34, 0.50),new Vec3D(0.41, -0.41, -0.41) }, new int[]{ 12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,107 }, new int[]{ 0,1,2,3,0,2,4,3,2,5,6,7,0,5,7,1,0,7,8,7,6,9,8,6,10,9,6,11,9,10,12,11,10,13,12,10,11,14,15,9,11,15,8,9,15,16,15,14,17,16,14,18,17,14,19,16,17,20,19,17,21,20,17,21,17,18,22,21,18,23,22,18,24,25,26,27,24,26,28,27,26,26,29,19,28,26,19,20,28,19,2,29,26,4,2,26,25,4,26,30,31,32,33,30,32,34,33,32,30,35,36,31,30,36,37,31,36,31,37,38,32,31,38,39,32,38,40,41,39,42,40,39,38,42,39,13,41,40,12,13,40,43,12,40,40,42,44,43,40,44,45,43,44,46,47,45,48,46,45,44,48,45,49,50,46,51,49,46,48,51,46,23,47,46,22,23,46,50,22,46,52,53,54,27,52,54,24,27,54,52,49,51,53,52,51,55,53,51,35,54,53,36,35,53,55,36,53,3,33,34,0,3,34,5,0,34 }, new Vec3D[]{ new Vec3D(-0.41, 0.41, -0.41),new Vec3D(-0.34, 0.50, -0.34),new Vec3D(0.00, 0.50, -0.49),new Vec3D(-0.34, 0.34, -0.50),new Vec3D(0.00, 0.49, -0.50),new Vec3D(-0.50, 0.34, -0.34),new Vec3D(-0.50, 0.49, 0.00),new Vec3D(-0.49, 0.50, 0.00),new Vec3D(-0.34, 0.50, 0.34),new Vec3D(-0.41, 0.41, 0.41),new Vec3D(-0.50, 0.34, 0.34),new Vec3D(-0.34, 0.34, 0.50),new Vec3D(-0.49, 0.00, 0.50),new Vec3D(-0.50, 0.00, 0.49),new Vec3D(0.00, 0.49, 0.50),new Vec3D(0.00, 0.50, 0.49),new Vec3D(0.34, 0.50, 0.34),new Vec3D(0.41, 0.41, 0.41),new Vec3D(0.34, 0.34, 0.50),new Vec3D(0.49, 0.50, 0.00),new Vec3D(0.50, 0.49, 0.00),new Vec3D(0.50, 0.34, 0.34),new Vec3D(0.50, 0.00, 0.49),new Vec3D(0.49, 0.00, 0.50),new Vec3D(0.49, 0.00, -0.50),new Vec3D(0.34, 0.34, -0.50),new Vec3D(0.41, 0.41, -0.41),new Vec3D(0.50, 0.00, -0.49),new Vec3D(0.50, 0.34, -0.34),new Vec3D(0.34, 0.50, -0.34),new Vec3D(-0.34, -0.34, -0.50),new Vec3D(-0.41, -0.41, -0.41),new Vec3D(-0.50, -0.34, -0.34),new Vec3D(-0.49, 0.00, -0.50),new Vec3D(-0.50, 0.00, -0.49),new Vec3D(0.00, -0.49, -0.50),new Vec3D(0.00, -0.50, -0.49),new Vec3D(-0.34, -0.50, -0.34),new Vec3D(-0.49, -0.50, 0.00),new Vec3D(-0.50, -0.49, 0.00),new Vec3D(-0.41, -0.41, 0.41),new Vec3D(-0.50, -0.34, 0.34),new Vec3D(-0.34, -0.50, 0.34),new Vec3D(-0.34, -0.34, 0.50),new Vec3D(0.00, -0.50, 0.49),new Vec3D(0.00, -0.49, 0.50),new Vec3D(0.41, -0.41, 0.41),new Vec3D(0.34, -0.34, 0.50),new Vec3D(0.34, -0.50, 0.34),new Vec3D(0.50, -0.49, 0.00),new Vec3D(0.50, -0.34, 0.34),new Vec3D(0.49, -0.50, 0.00),new Vec3D(0.50, -0.34, -0.34),new Vec3D(0.41, -0.41, -0.41),new Vec3D(0.34, -0.34, -0.50),new Vec3D(0.34, -0.50, -0.34) } ),
         new TestCaseData( new int[]{ 0,1,2,3,0,2,0,4,1,5,4,0,5,0,3,6,5,3,7,4,5,7,5,6,8,7,6,9,7,8,10,9,8,9,4,7,11,4,9,11,9,10,12,11,10,13,4,11,13,11,12,14,13,12,15,16,13,14,15,13,16,4,13,2,1,16,15,2,16,1,4,16,6,3,2,8,6,2,10,8,2,12,10,2,14,12,2,15,14,2 }, new Vec3D[]{ new Vec3D(-0.10, -0.44, -0.10),new Vec3D(0.00, -0.44, -0.14),new Vec3D(0.00, -0.50, -0.25),new Vec3D(-0.18, -0.50, -0.18),new Vec3D(0.00, -0.40, 0.00),new Vec3D(-0.14, -0.44, 0.00),new Vec3D(-0.25, -0.50, 0.00),new Vec3D(-0.10, -0.44, 0.10),new Vec3D(-0.18, -0.50, 0.18),new Vec3D(0.00, -0.44, 0.14),new Vec3D(0.00, -0.50, 0.25),new Vec3D(0.10, -0.44, 0.10),new Vec3D(0.18, -0.50, 0.18),new Vec3D(0.14, -0.44, 0.00),new Vec3D(0.25, -0.50, 0.00),new Vec3D(0.18, -0.50, -0.18),new Vec3D(0.10, -0.44, -0.10) }, new int[]{ 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23 }, new int[]{ 0,1,2,3,0,2,0,4,1,5,4,0,5,0,3,6,5,3,7,4,5,7,5,6,8,7,6,9,7,8,10,9,8,9,4,7,11,4,9,11,9,10,12,11,10,13,4,11,13,11,12,14,13,12,15,16,13,14,15,13,16,4,13,2,1,16,15,2,16,1,4,16 }, new Vec3D[]{ new Vec3D(-0.10, -0.44, -0.10),new Vec3D(0.00, -0.44, -0.14),new Vec3D(0.00, -0.50, -0.25),new Vec3D(-0.18, -0.50, -0.18),new Vec3D(0.00, -0.40, 0.00),new Vec3D(-0.14, -0.44, 0.00),new Vec3D(-0.25, -0.50, 0.00),new Vec3D(-0.10, -0.44, 0.10),new Vec3D(-0.18, -0.50, 0.18),new Vec3D(0.00, -0.44, 0.14),new Vec3D(0.00, -0.50, 0.25),new Vec3D(0.10, -0.44, 0.10),new Vec3D(0.18, -0.50, 0.18),new Vec3D(0.14, -0.44, 0.00),new Vec3D(0.25, -0.50, 0.00),new Vec3D(0.18, -0.50, -0.18),new Vec3D(0.10, -0.44, -0.10) } ),
         new TestCaseData( new int[]{ 0,1,2,0,3,4,5,6,7,8,2,9,10,11,1,11,9,1,8,12,2,5,13,6,4,14,0,13,12,11,15,13,3,12,5,7,0,15,3,12,7,2,4,10,14,6,13,15,10,1,14,11,8,9,6,15,0,2,7,6,1,9,2,0,14,1,2,6,0,4,3,13,11,10,4,12,8,11,13,5,12,11,4,13 }, new Vec3D[]{ new Vec3D(-0.25, 0.50, 0.00),new Vec3D(0.00, 0.50, 0.25),new Vec3D(0.25, 0.50, 0.00),new Vec3D(-0.34, -0.50, -0.34),new Vec3D(-0.49, -0.50, 0.00),new Vec3D(0.34, -0.50, -0.34),new Vec3D(0.00, 0.50, -0.25),new Vec3D(0.18, 0.50, -0.18),new Vec3D(0.34, -0.50, 0.34),new Vec3D(0.18, 0.50, 0.18),new Vec3D(-0.34, -0.50, 0.34),new Vec3D(0.00, -0.50, 0.49),new Vec3D(0.49, -0.50, 0.00),new Vec3D(0.00, -0.50, -0.49),new Vec3D(-0.18, 0.50, 0.18),new Vec3D(-0.18, 0.50, -0.18) }, new int[]{ 1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17 }, new int[]{ 0,1,2,3,4,5,6,7,8,9,10,11,10,8,11,6,12,7,3,13,4,2,14,0,15,13,1,12,3,5,0,15,1,12,5,7,2,9,14,4,13,15,9,11,14,10,6,8 }, new Vec3D[]{ new Vec3D(-0.25, 0.50, 0.00),new Vec3D(-0.34, -0.50, -0.34),new Vec3D(-0.49, -0.50, 0.00),new Vec3D(0.34, -0.50, -0.34),new Vec3D(0.00, 0.50, -0.25),new Vec3D(0.18, 0.50, -0.18),new Vec3D(0.34, -0.50, 0.34),new Vec3D(0.25, 0.50, 0.00),new Vec3D(0.18, 0.50, 0.18),new Vec3D(-0.34, -0.50, 0.34),new Vec3D(0.00, -0.50, 0.49),new Vec3D(0.00, 0.50, 0.25),new Vec3D(0.49, -0.50, 0.00),new Vec3D(0.00, -0.50, -0.49),new Vec3D(-0.18, 0.50, 0.18),new Vec3D(-0.18, 0.50, -0.18) } ),
         new TestCaseData( new int[]{ 0,1,2,0,3,4,5,6,7,8,2,9,10,11,1,11,9,1,8,12,2,5,13,6,4,14,0,13,12,11,15,13,3,12,5,7,0,15,3,12,7,2,4,10,14,6,13,15,10,1,14,11,8,9,6,15,0,2,7,6,1,9,2,0,14,1,2,6,0,4,3,13,11,10,4,12,8,11,13,5,12,11,4,13 }, new Vec3D[]{ new Vec3D(-0.49, 0.50, 0.00),new Vec3D(0.00, 0.50, 0.49),new Vec3D(0.49, 0.50, 0.00),new Vec3D(-0.34, -0.50, -0.34),new Vec3D(-0.49, -0.50, 0.00),new Vec3D(0.34, -0.50, -0.34),new Vec3D(0.00, 0.50, -0.49),new Vec3D(0.34, 0.50, -0.34),new Vec3D(0.34, -0.50, 0.34),new Vec3D(0.34, 0.50, 0.34),new Vec3D(-0.34, -0.50, 0.34),new Vec3D(0.00, -0.50, 0.49),new Vec3D(0.49, -0.50, 0.00),new Vec3D(0.00, -0.50, -0.49),new Vec3D(-0.34, 0.50, 0.34),new Vec3D(-0.34, 0.50, -0.34) }, new int[]{ 1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17 }, new int[]{ 0,1,2,3,4,5,6,7,8,9,10,11,10,8,11,6,12,7,3,13,4,2,14,0,15,13,1,12,3,5,0,15,1,12,5,7,2,9,14,4,13,15,9,11,14,10,6,8 }, new Vec3D[]{ new Vec3D(-0.49, 0.50, 0.00),new Vec3D(-0.34, -0.50, -0.34),new Vec3D(-0.49, -0.50, 0.00),new Vec3D(0.34, -0.50, -0.34),new Vec3D(0.00, 0.50, -0.49),new Vec3D(0.34, 0.50, -0.34),new Vec3D(0.34, -0.50, 0.34),new Vec3D(0.49, 0.50, 0.00),new Vec3D(0.34, 0.50, 0.34),new Vec3D(-0.34, -0.50, 0.34),new Vec3D(0.00, -0.50, 0.49),new Vec3D(0.00, 0.50, 0.49),new Vec3D(0.49, -0.50, 0.00),new Vec3D(0.00, -0.50, -0.49),new Vec3D(-0.34, 0.50, 0.34),new Vec3D(-0.34, 0.50, -0.34) } ),
         new TestCaseData( new int[]{ 0,1,2,3,4,0,2,5,3,1,6,2,0,7,1,2,3,0,8,9,10,11,12,9,13,10,12,14,8,10,15,9,8,12,10,9,11,9,0,4,11,0,8,14,6,1,8,6,10,13,5,2,10,5,12,11,4,3,12,4,9,15,7,0,9,7,15,8,1,7,15,1,14,10,2,6,14,2,13,12,3,5,13,3 }, new Vec3D[]{ new Vec3D(-0.25, 0.50, 0.00),new Vec3D(0.00, 0.50, 0.25),new Vec3D(0.25, 0.50, 0.00),new Vec3D(0.00, 0.50, -0.25),new Vec3D(-0.18, 0.50, -0.18),new Vec3D(0.18, 0.50, -0.18),new Vec3D(0.18, 0.50, 0.18),new Vec3D(-0.18, 0.50, 0.18),new Vec3D(0.00, -0.50, 0.25),new Vec3D(-0.25, -0.50, 0.00),new Vec3D(0.25, -0.50, 0.00),new Vec3D(-0.18, -0.50, -0.18),new Vec3D(0.00, -0.50, -0.25),new Vec3D(0.18, -0.50, -0.18),new Vec3D(0.18, -0.50, 0.18),new Vec3D(-0.18, -0.50, 0.18) }, new int[]{ 12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27 }, new int[]{ 0,1,2,3,0,2,4,5,6,7,4,6,8,9,10,11,8,10,12,0,3,13,12,3,1,14,15,2,1,15,14,4,7,15,14,7,5,8,11,6,5,11,9,12,13,10,9,13 }, new Vec3D[]{ new Vec3D(-0.18, -0.50, -0.18),new Vec3D(-0.25, -0.50, 0.00),new Vec3D(-0.25, 0.50, 0.00),new Vec3D(-0.18, 0.50, -0.18),new Vec3D(0.00, -0.50, 0.25),new Vec3D(0.18, -0.50, 0.18),new Vec3D(0.18, 0.50, 0.18),new Vec3D(0.00, 0.50, 0.25),new Vec3D(0.25, -0.50, 0.00),new Vec3D(0.18, -0.50, -0.18),new Vec3D(0.18, 0.50, -0.18),new Vec3D(0.25, 0.50, 0.00),new Vec3D(0.00, -0.50, -0.25),new Vec3D(0.00, 0.50, -0.25),new Vec3D(-0.18, -0.50, 0.18),new Vec3D(-0.18, 0.50, 0.18) } ),

        };

    [TestCaseSource(nameof(abcde))]
    public void Old_Retest(int[] triangles, Vec3D[] vertices, int[] facesToKeep, int[] expectedTriangles, Vec3D[] expectedVertices)
    {
#pragma warning disable CS0618 // Type or member is obsolete
            (var resultVertices, var resultTriangles) = MeshUtil._old_testingOnly_RemoveUnusedFacesAndVertices(triangles, vertices, facesToKeep);
#pragma warning restore CS0618 // Type or member is obsolete
            Assert.AreEqual(expectedVertices, resultVertices);
        Assert.AreEqual(expectedTriangles, resultTriangles);
    }
        [TestCaseSource(nameof(abcde))]
        public void UnusedVerticeRemover_Span_Tests(int[] triangles, Vec3D[] vertices, int[] facesToKeep, int[] expectedTriangles, Vec3D[] expectedVertices)
        {
            //(var resultVertices, var resultTriangles) = MeshUtil.old_testingOnly_RemoveUnusedFacesAndVertices(triangles, vertices, facesToKeep);
            var resultFaces = MeshUtil.RemoveUnusedFaces(triangles.AsSpan().CastToIndexedTri_ReadOnlySpan(), facesToKeep);
            //Debug.Log(String.Join(',', resultTriangles.AsReadOnlySpan().CastToInt_ReadOnlySpan().ToArray()));
            var resultVertices = MeshUtil.RemoveUnusedVerticesReturningPooledArrayAndReindexFaces_Span<Vec3D>(
                resultFaces.AsReadOnlySpan(), resultFaces.AsSpan(), vertices.AsSpan());
            //Debug.Log(String.Join(',', resultTriangles.AsReadOnlySpan().CastToInt_ReadOnlySpan().ToArray()));
            //Debug.Log(String.Join(',', resultVertices.AsReadOnlySpan().ToArray()));

            //Assert.AreEqual(expectedVertices, resultVertices.AsReadOnlySpan());
            //Assert.AreEqual(expectedTriangles, resultTriangles.AsReadOnlySpan().CastToInt_ReadOnlySpan());

            resultVertices.AsReadOnlySpan().ShouldEqual(expectedVertices);
            resultFaces.AsReadOnlySpan().CastToInt_ReadOnlySpan().ShouldEqual(expectedTriangles.AsSpan());
        }
        [TestCaseSource(nameof(abcde))]
        public void UnusedVerticeRemover_iList_Tests(int[] triangles, Vec3D[] vertices, int[] facesToKeep, int[] expectedTriangles, Vec3D[] expectedVertices)
        {
            //(var resultVertices, var resultTriangles) = MeshUtil.old_testingOnly_RemoveUnusedFacesAndVertices(triangles, vertices, facesToKeep);
            var resultTriangles = MeshUtil.RemoveUnusedFaces(triangles.AsSpan().CastToIndexedTri_ReadOnlySpan(), facesToKeep);
            //Debug.Log(String.Join(',', resultTriangles.AsReadOnlySpan().CastToInt_ReadOnlySpan().ToArray()));
            var resultVertices = MeshUtil.RemoveUnusedVerticesReturningPooledArrayAndReindexFaces_IList<Vec3D>(
                resultTriangles, resultTriangles, vertices);
            //Debug.Log(String.Join(',', resultTriangles.AsReadOnlySpan().CastToInt_ReadOnlySpan().ToArray()));
            //Debug.Log(String.Join(',', resultVertices.AsReadOnlySpan().ToArray()));
            Assert.AreEqual(expectedVertices, resultVertices);
            Assert.AreEqual(expectedTriangles, resultTriangles.AsReadOnlySpan().CastToInt_ReadOnlySpan().ToArray());
        }
    }
}